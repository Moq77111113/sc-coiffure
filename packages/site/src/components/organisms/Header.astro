---
import { Icon } from 'astro-icon';
import ThemeSwitcher from '~/components/atoms/ThemeSwitcher.astro';
import type { FooterLink, NavItem } from '~/types';
import SocialList from '~/components/molecules/SocialList.astro';
import Social from '~/components/molecules/SocialLoop.astro';
import { social } from '~/constants/social';
import Share from '../molecules/Share.svelte';
import { getRandomPost } from '~/services/ig/posts';
import { Image } from 'astro:assets';
const navItems: Array<NavItem> = [
  { title: 'Contact', url: '/#contact' },
  { title: 'Galerie', url: '/#gallery' },
];

const links: Array<FooterLink> = [
  {
    url: social.instagram,
    description: 'Instagram',
    icon: 'uil:instagram-alt',
  },
  {
    url: social.facebook,
    description: 'Facebook',
    icon: 'mdi:facebook',
  },
  {
    url: `mailto:${social.email}`,
    description: 'Email',
    icon: 'mdi:email',
  },
  {
    url: `tel:${social.phone}`,
    description: 'Appelez-nous',
    icon: 'mdi:phone',
  },
];

const post = await getRandomPost();
---

<header
  id="page-header"
  class="fixed z-20 flex w-full items-center justify-between border-b border-transparent px-8 py-4 text-white"
>
  <a class="flex items-center gap-3 hover:!text-default" href="/">
    <h1 class="sr-only">SC Coiffure</h1>
    <Icon name="logomark" class="h-16" />
  </a>
  <div>
    <div class="flex items-center gap-6">
      <nav class="hidden sm:block">
        <ul class="flex items-center gap-6">
          {
            navItems.map(({ title, url }) => (
              <li>
                <a class="text-sm" href={url}>
                  {title}
                </a>
              </li>
            ))
          }
        </ul>
      </nav>
      <Fragment class="sm:hidden"><Social links={links} /></Fragment>
      <Share client:idle />
      <ThemeSwitcher />
      <button
        id="open-nav-button"
        type="button"
        class="btn sm:hidden"
        aria-label="Navigation"
      >
        <i class="fa-solid fa-bars justify-content-center flex h-8 items-center"
        ></i>
      </button>
    </div>

    <div id="menu-modal" class="modal hidden" aria-hidden="true">
      <div class="fixed inset-0 bg-default px-8 py-4 text-default">
        <div
          class="flex h-full flex-col justify-between"
          role="dialog"
          aria-modal="true"
        >
          <div class="flex h-full flex-col justify-center">
            <header class="w-full text-right">
              <button
                id="close-nav-button"
                type="button"
                aria-label="Close navigation"
              >
                <i
                  class="fa-solid fa-xmark justify-content-center flex h-8 items-center"
                ></i>
              </button>
            </header>
            <section class="flex h-full flex-col items-center justify-between">
              <div class="flex h-full flex-col items-center gap-4">
                <Icon name="logomark" class="h-24" />

                <nav>
                  <ul class="flex flex-col">
                    {
                      navItems.map(({ title, url }) => (
                        <li>
                          <a class="block py-4 text-center text-xl" href={url}>
                            {title}
                          </a>
                        </li>
                      ))
                    }
                  </ul>
                </nav>
                {
                  post && (
                    <article class="flex items-center justify-center py-2">
                      <Image
                        class="pointer-events-none h-40 w-40 animate-clouding rounded-md object-cover"
                        src={post.media_url}
                        alt={post.caption}
                        width={25}
                        height={25}
                      />
                    </article>
                  )
                }
              </div>
              <div
                class="px-auto items-centerw-full flex justify-center gap-10 py-4"
              >
                <SocialList links={links} />
              </div>
            </section>
          </div>
        </div>
      </div>
    </div>

    <script>
      import MicroModal from 'micromodal';
      import invariant from 'tiny-invariant';

      const menuModalId = 'menu-modal';

      const header = document.querySelector('#page-header') as HTMLElement;
      const page = document.documentElement;
      const menu = document.querySelector(`#${menuModalId} ul`);
      const openNavButton = document.querySelector('#open-nav-button');
      const closeNavButton = document.querySelector('#close-nav-button');

      invariant(header, 'header should not be null');
      invariant(menu, 'menu should not be null');
      invariant(openNavButton, 'openNavButton should not be null');
      invariant(closeNavButton, 'closeNavButton should not be null');

      const openMenu = () => {
        MicroModal.show(menuModalId, { disableScroll: true });
      };

      const closeMenu = () => {
        MicroModal.close(menuModalId);
      };

      openNavButton.addEventListener('click', openMenu);
      closeNavButton.addEventListener('click', closeMenu);

      const onScroll = () => {
        const d = page.clientHeight - page.scrollTop - header.offsetHeight;
        header.classList.toggle('colored-header', d < 0);
      };
      document.addEventListener('scroll', () => onScroll());

      onScroll();
      menu.addEventListener('click', (event) => {
        if ((event.target as HTMLElement).tagName === 'A') {
          closeMenu();
        }
      });
    </script>

    <noscript>
      <style>
        #open-nav-button {
          display: none;
        }
      </style>
    </noscript>

    <style>
      .colored-header {
        @apply border-default bg-default text-default;
      }
      .modal.is-open {
        @apply block;
      }
    </style>
  </div>
</header>
