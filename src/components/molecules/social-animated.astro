---
import type { FooterLink } from "~/types";
import { Icon } from "astro-icon";
import Link from "~/components/atoms/link.svelte";
interface Props {
  links: Array<FooterLink>;
}
const { links } = Astro.props;
---

<script>
  const links = document.querySelectorAll("#link-list li");
  let currentIndex = 0;
  const toggle = () =>
    links.forEach((link, index) => {
      if (index === currentIndex) {
        link.classList.remove("hidden");
        link.classList.add("flex");
      } else {
        link.classList.remove("flex");
        link.classList.add("hidden");
      }
    });
  toggle();
  setInterval(() => {
    currentIndex = (currentIndex + 1) % links.length;
    toggle();
  }, 10000);
</script>
<ul id="link-list">
  {
    links.map((link, index) => (
      <li
        class={`animate-pop flex h-10 w-10 justify-center rounded-full border-current p-1 `}
      >
        <Link href={link.url} title={link.description} newTab={true}>
          <Icon name={link.icon} class="h-full" />
          <span class="sr-only">{link.description}</span>
        </Link>
      </li>
    ))
  }
</ul>

<style>
  @keyframes pop {
    0% {
      transform: scale(0);
    }

    100% {
      transform: scale(1);
    }
  }

  .animate-pop {
    animation: pop 2.5s ease-out 1 alternate;
  }
</style>
